<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bfdb.mapper.RolePermissionMapper">
    <resultMap id="BaseResultMap" type="com.bfdb.entity.RolePermission">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="role_id" jdbcType="INTEGER" property="roleId"/>
        <result column="permission_id" jdbcType="INTEGER" property="permissionId"/>
        <result column="data_permission_id" jdbcType="INTEGER" property="dataPermissionId"/>
        <result column="web_data_permission" jdbcType="INTEGER" property="webDataPermission" />
    </resultMap>

    <resultMap id="BaseResultMap2" type="com.bfdb.entity.RolePermission">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="role_id" jdbcType="INTEGER" property="roleId"/>
        <result column="permission_id" jdbcType="INTEGER" property="permissionId"/>
        <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="web_data_permission" jdbcType="INTEGER" property="webDataPermission" />
    </resultMap>
    <sql id="Base_Column_List">
          id, role_id, permission_id,web_data_permission
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from role_permission
        where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="selectAllByPrimaryKey" resultMap="BaseResultMap2" parameterType="java.lang.Integer">
        SELECT  r.role_id,r.role_name,r.description,rp.permission_id
            FROM permission p
            LEFT JOIN role_permission rp
            ON p.permission_id=rp.permission_id
            LEFT JOIN role r
            ON rp.role_id=r.role_id
            WHERE r.role_id = #{role_id}
    </select>

    <!--根据角色id，删除角色与权限的管理信息-->
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from role_permission
        where role_id = #{role_id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.bfdb.entity.RolePermission">
        insert into role_permission (id, role_id, permission_id
        )
        values (#{id,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{permissionId,jdbcType=INTEGER}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.bfdb.entity.RolePermission">
        insert into role_permission
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
            <if test="permissionId != null">
                permission_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=INTEGER},
            </if>
            <if test="permissionId != null">
                #{permissionId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.bfdb.entity.RolePermission">
        update role_permission
        <set>
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=INTEGER},
            </if>
            <if test="permissionId != null">
                permission_id = #{permissionId,jdbcType=INTEGER},
            </if>
        </set>
        where role_id = #{roleId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.bfdb.entity.RolePermission">
        update role_permission
        set role_id = #{roleId,jdbcType=INTEGER},
        permission_id = #{permissionId,jdbcType=INTEGER},
        where id = #{id,jdbcType=INTEGER}
    </update>

    <!--新增角色和资源表的关联信息-->
    <insert id="insertRolePermissions" parameterType="java.util.Map">
        insert into
        role_permission (role_id,permission_id,web_data_permission)
        values
        <foreach collection="permissionIds" item="permissionId" separator=",">
            ( #{roleId},#{permissionId},#{webDataPermission})
        </foreach>
    </insert>

    <!--根据角色id删除角色信息-->
    <delete id="deletePermissionsByRoleId">
        delete from role_permission where role_id = #{roleId,jdbcType=INTEGER}
    </delete>

    <!--根据角色查询权限信息-->
    <select id="queryPermissionIdsByRoleId" resultMap="BaseResultMap">
        select  id, role_id, permission_id,web_data_permission  from role_permission where role_id = #{roleId}
    </select>

   <!--查询页面权限-->
    <select id="selectPermissionByUserId" resultType="com.bfdb.entity.Permission" parameterType="java.lang.Integer">
      select	p.`permission_id`,	p.`permission_name`,	p.`description`,	p.`pid`,
	p.`permission_code`,	p.`permission_type`,	p.`visitor_url`,	p.`popup_way`,	p.`icon_address`

    from	permission p
    left join role_permission rp on p.permission_id = rp.permission_id
    where
	rp.role_id in (
		select
			r.role_id
		from
			role r
		left join  user_role ur on r.role_id = ur.role_id
		left join  `user` u on ur.user_id = u.user_id
		where
			u.user_id = #{userId} and  p.definition&lt;&gt; '3'
        )  and rp.web_data_permission=1
    </select>

</mapper>